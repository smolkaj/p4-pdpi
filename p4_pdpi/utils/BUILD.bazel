# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//p4_pdpi:pdgen.bzl", "p4_pd_proto")
load("@com_github_p4lang_p4c//:bazel/p4_library.bzl", "p4_library")
load("//p4_pdpi/testing:diff_test.bzl", "cmd_diff_test", "diff_test")

package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],
)

cc_library(
    name = "annotation_parser",
    srcs = [
        "annotation_parser.cc",
    ],
    hdrs = [
        "annotation_parser.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//gutil:status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_googlesource_code_re2//:re2",
    ],
)

cc_test(
    name = "annotation_parser_test",
    srcs = ["annotation_parser_test.cc"],
    deps = [
        ":annotation_parser",
        "//gutil:status",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "ir",
    srcs = [
        "ir.cc",
    ],
    hdrs = [
        "ir.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//gutil:proto",
        "//gutil:status",
        "//p4_pdpi:ir_cc_proto",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "ir_test",
    srcs = ["ir_test.cc"],
    deps = [
        ":ir",
        "//gutil:proto",
        "//gutil:status",
        "//gutil:status_matchers",
        "//p4_pdpi:ir_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "pd",
    srcs = [
        "pd.cc",
    ],
    hdrs = [
        "pd.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//gutil:proto",
        "//gutil:status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_library(
    name = "hex_string",
    srcs = ["hex_string.cc"],
    hdrs = ["hex_string.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//gutil:status",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
)

cc_binary(
    name = "hex_string_test_binary",
    srcs = ["hex_string_test.cc"],
    deps = [
        ":hex_string",
    ],
)

cmd_diff_test(
    name = "hex_string_test",
    actual_cmd = "$(execpath :hex_string_test_binary)",
    expected = "//p4_pdpi/testing/testdata:hex_string.expected",
    tools = [
        ":hex_string_test_binary",
    ],
)
